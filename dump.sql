--
-- PostgreSQL database dump
--

-- Dumped from database version 14.5
-- Dumped by pg_dump version 14.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: appointment; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.appointment (
    id bigint NOT NULL,
    is_active boolean NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    type character varying(1) NOT NULL,
    visiting_datetime timestamp with time zone NOT NULL,
    approved boolean NOT NULL,
    client_id bigint NOT NULL,
    doctor_id bigint NOT NULL
);


ALTER TABLE public.appointment OWNER TO medical_user;

--
-- Name: appointment_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.appointment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.appointment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO medical_user;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO medical_user;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO medical_user;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: client; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.client (
    id bigint NOT NULL,
    sex character varying(1) NOT NULL,
    birthday_date date NOT NULL,
    is_active boolean NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    passport character varying(9),
    phone_number character varying(12),
    city character varying(120),
    country character varying(2) NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.client OWNER TO medical_user;

--
-- Name: client_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.client ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.client_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO medical_user;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO medical_user;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO medical_user;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO medical_user;

--
-- Name: doctor; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.doctor (
    id bigint NOT NULL,
    sex character varying(1) NOT NULL,
    birthday_date date NOT NULL,
    is_active boolean NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    category character varying(1) NOT NULL,
    department character varying(4) NOT NULL,
    user_id bigint NOT NULL
);


ALTER TABLE public.doctor OWNER TO medical_user;

--
-- Name: doctor_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.doctor ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.doctor_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: medical_card; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.medical_card (
    id bigint NOT NULL,
    is_active boolean NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    weight numeric(4,1) NOT NULL,
    height numeric(4,1) NOT NULL,
    blood character varying(3) NOT NULL,
    allergies text NOT NULL,
    client_id bigint NOT NULL
);


ALTER TABLE public.medical_card OWNER TO medical_user;

--
-- Name: medical_card_appointment; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.medical_card_appointment (
    id bigint NOT NULL,
    is_active boolean NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    symptom text NOT NULL,
    therapy text NOT NULL,
    appointment_id bigint NOT NULL,
    medical_card_id bigint NOT NULL
);


ALTER TABLE public.medical_card_appointment OWNER TO medical_user;

--
-- Name: medical_card_appointment_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.medical_card_appointment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.medical_card_appointment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: medical_card_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.medical_card ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.medical_card_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: receptionist; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.receptionist (
    id bigint NOT NULL,
    sex character varying(1) NOT NULL,
    birthday_date date NOT NULL,
    is_active boolean NOT NULL,
    created timestamp with time zone NOT NULL,
    updated timestamp with time zone NOT NULL,
    work_phone_number character varying(12),
    user_id bigint NOT NULL
);


ALTER TABLE public.receptionist OWNER TO medical_user;

--
-- Name: receptionist_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.receptionist ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.receptionist_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_user; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.user_user (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    type integer NOT NULL,
    email_confirmed boolean NOT NULL
);


ALTER TABLE public.user_user OWNER TO medical_user;

--
-- Name: user_user_groups; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.user_user_groups (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.user_user_groups OWNER TO medical_user;

--
-- Name: user_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.user_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_user_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.user_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_user_user_permissions; Type: TABLE; Schema: public; Owner: medical_user
--

CREATE TABLE public.user_user_user_permissions (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.user_user_user_permissions OWNER TO medical_user;

--
-- Name: user_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: medical_user
--

ALTER TABLE public.user_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: appointment; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.appointment (id, is_active, created, updated, type, visiting_datetime, approved, client_id, doctor_id) FROM stdin;
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1       Can add log entry       1       add_logentry
2       Can change log entry    1       change_logentry
3       Can delete log entry    1       delete_logentry
4       Can view log entry      1       view_logentry
5       Can add permission      2       add_permission
6       Can change permission   2       change_permission
7       Can delete permission   2       delete_permission
8       Can view permission     2       view_permission
9       Can add group   3       add_group
10      Can change group        3       change_group
11      Can delete group        3       delete_group
12      Can view group  3       view_group
13      Can add content type    4       add_contenttype
14      Can change content type 4       change_contenttype
15      Can delete content type 4       delete_contenttype
16      Can view content type   4       view_contenttype
17      Can add session 5       add_session
18      Can change session      5       change_session
19      Can delete session      5       delete_session
20      Can view session        5       view_session
21      Can add client  6       add_client
22      Can change client       6       change_client
23      Can delete client       6       delete_client
24      Can view client 6       view_client
25      Can add doctor  7       add_doctor
26      Can change doctor       7       change_doctor
27      Can delete doctor       7       delete_doctor
28      Can view doctor 7       view_doctor
29      Can add receptionist    8       add_receptionist
30      Can change receptionist 8       change_receptionist
31      Can delete receptionist 8       delete_receptionist
32      Can view receptionist   8       view_receptionist
33      Can add user    9       add_user
34      Can change user 9       change_user
35      Can delete user 9       delete_user
36      Can view user   9       view_user
37      Can add appointment     10      add_appointment
38      Can change appointment  10      change_appointment
39      Can delete appointment  10      delete_appointment
40      Can view appointment    10      view_appointment
41      Can add medical card    11      add_medicalcard
42      Can change medical card 11      change_medicalcard
43      Can delete medical card 11      delete_medicalcard
44      Can view medical card   11      view_medicalcard
45      Can add medical card appointment        12      add_medicalcardappointment
46      Can change medical card appointment     12      change_medicalcardappointment
47      Can delete medical card appointment     12      delete_medicalcardappointment
48      Can view medical card appointment       12      view_medicalcardappointment
\.


--
-- Data for Name: client; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.client (id, sex, birthday_date, is_active, created, updated, passport, phone_number, city, country, user_id) FROM stdin;
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1       admin   logentry
2       auth    permission
3       auth    group
4       contenttypes    contenttype
5       sessions        session
6       client  client
7       doctor  doctor
8       receptionist    receptionist
9       user    user
10      appointment     appointment
11      medcard medicalcard
12      medcard medicalcardappointment
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1       contenttypes    0001_initial    2022-10-23 17:02:39.019465+00
2       contenttypes    0002_remove_content_type_name   2022-10-23 17:02:39.026239+00
3       auth    0001_initial    2022-10-23 17:02:39.058189+00
4       auth    0002_alter_permission_name_max_length   2022-10-23 17:02:39.063151+00
5       auth    0003_alter_user_email_max_length        2022-10-23 17:02:39.069153+00
6       auth    0004_alter_user_username_opts   2022-10-23 17:02:39.074963+00
7       auth    0005_alter_user_last_login_null 2022-10-23 17:02:39.081369+00
8       auth    0006_require_contenttypes_0002  2022-10-23 17:02:39.082862+00
9       auth    0007_alter_validators_add_error_messages        2022-10-23 17:02:39.087899+00
10      auth    0008_alter_user_username_max_length     2022-10-23 17:02:39.09363+00
11      auth    0009_alter_user_last_name_max_length    2022-10-23 17:02:39.098892+00
12      auth    0010_alter_group_name_max_length        2022-10-23 17:02:39.105508+00
13      auth    0011_update_proxy_permissions   2022-10-23 17:02:39.111047+00
14      auth    0012_alter_user_first_name_max_length   2022-10-23 17:02:39.115956+00
15      user    0001_initial    2022-10-23 17:02:39.150671+00
16      admin   0001_initial    2022-10-23 17:02:39.171601+00
17      admin   0002_logentry_remove_auto_add   2022-10-23 17:02:39.180992+00
18      admin   0003_logentry_add_action_flag_choices   2022-10-23 17:02:39.192094+00
19      doctor  0001_initial    2022-10-23 17:02:39.198728+00
20      client  0001_initial    2022-10-23 17:02:39.207752+00
21      appointment     0001_initial    2022-10-23 17:02:39.213988+00
22      appointment     0002_initial    2022-10-23 17:02:39.225214+00
23      appointment     0003_initial    2022-10-23 17:02:39.235137+00
24      client  0002_initial    2022-10-23 17:02:39.248635+00
25      client  0003_alter_client_passport      2022-10-23 17:02:39.259086+00
26      doctor  0002_initial    2022-10-23 17:02:39.273735+00
27      medcard 0001_initial    2022-10-23 17:02:39.367085+00
28      receptionist    0001_initial    2022-10-23 17:02:39.373353+00
29      receptionist    0002_initial    2022-10-23 17:02:39.391937+00
30      sessions        0001_initial    2022-10-23 17:02:39.404144+00
31      user    0002_alter_user_email   2022-10-23 17:02:39.420055+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
\.


--
-- Data for Name: doctor; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.doctor (id, sex, birthday_date, is_active, created, updated, category, department, user_id) FROM stdin;
\.


--
-- Data for Name: medical_card; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.medical_card (id, is_active, created, updated, weight, height, blood, allergies, client_id) FROM stdin;
\.


--
-- Data for Name: medical_card_appointment; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.medical_card_appointment (id, is_active, created, updated, symptom, therapy, appointment_id, medical_card_id) FROM stdin;
\.


--
-- Data for Name: receptionist; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.receptionist (id, sex, birthday_date, is_active, created, updated, work_phone_number, user_id) FROM stdin;
\.


--
-- Data for Name: user_user; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.user_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, type, email_confirmed) FROM stdin;
\.


--
-- Data for Name: user_user_groups; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.user_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: user_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: medical_user
--

COPY public.user_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Name: appointment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.appointment_id_seq', 1, false);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 48, true);


--
-- Name: client_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.client_id_seq', 1, false);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 12, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 31, true);


--
-- Name: doctor_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.doctor_id_seq', 1, false);


--
-- Name: medical_card_appointment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.medical_card_appointment_id_seq', 1, false);


--
-- Name: medical_card_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.medical_card_id_seq', 1, false);


--
-- Name: receptionist_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.receptionist_id_seq', 1, false);


--
-- Name: user_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.user_user_groups_id_seq', 1, false);


--
-- Name: user_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.user_user_id_seq', 1, false);


--
-- Name: user_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: medical_user
--

SELECT pg_catalog.setval('public.user_user_user_permissions_id_seq', 1, false);


--
-- Name: appointment appointment_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.appointment
    ADD CONSTRAINT appointment_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: client client_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.client
    ADD CONSTRAINT client_pkey PRIMARY KEY (id);


--
-- Name: client client_user_id_key; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.client
    ADD CONSTRAINT client_user_id_key UNIQUE (user_id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: doctor doctor_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.doctor
    ADD CONSTRAINT doctor_pkey PRIMARY KEY (id);


--
-- Name: doctor doctor_user_id_key; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.doctor
    ADD CONSTRAINT doctor_user_id_key UNIQUE (user_id);


--
-- Name: medical_card_appointment medical_card_appointment_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.medical_card_appointment
    ADD CONSTRAINT medical_card_appointment_pkey PRIMARY KEY (id);


--
-- Name: medical_card medical_card_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.medical_card
    ADD CONSTRAINT medical_card_pkey PRIMARY KEY (id);


--
-- Name: receptionist receptionist_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.receptionist
    ADD CONSTRAINT receptionist_pkey PRIMARY KEY (id);


--
-- Name: receptionist receptionist_user_id_key; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.receptionist
    ADD CONSTRAINT receptionist_user_id_key UNIQUE (user_id);


--
-- Name: user_user user_user_email_1c6f3d1a_uniq; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user
    ADD CONSTRAINT user_user_email_1c6f3d1a_uniq UNIQUE (email);


--
-- Name: user_user_groups user_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_groups
    ADD CONSTRAINT user_user_groups_pkey PRIMARY KEY (id);


--
-- Name: user_user_groups user_user_groups_user_id_group_id_bb60391f_uniq; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_groups
    ADD CONSTRAINT user_user_groups_user_id_group_id_bb60391f_uniq UNIQUE (user_id, group_id);


--
-- Name: user_user user_user_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user
    ADD CONSTRAINT user_user_pkey PRIMARY KEY (id);


--
-- Name: user_user_user_permissions user_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_user_permissions
    ADD CONSTRAINT user_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: user_user_user_permissions user_user_user_permissions_user_id_permission_id_64f4d5b8_uniq; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_user_permissions
    ADD CONSTRAINT user_user_user_permissions_user_id_permission_id_64f4d5b8_uniq UNIQUE (user_id, permission_id);


--
-- Name: user_user user_user_username_key; Type: CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user
    ADD CONSTRAINT user_user_username_key UNIQUE (username);


--
-- Name: appointment_client_id_b74d6c15; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX appointment_client_id_b74d6c15 ON public.appointment USING btree (client_id);


--
-- Name: appointment_doctor_id_9ae603db; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX appointment_doctor_id_9ae603db ON public.appointment USING btree (doctor_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: medical_card_appointment_appointment_id_8ab3e76d; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX medical_card_appointment_appointment_id_8ab3e76d ON public.medical_card_appointment USING btree (appointment_id);


--
-- Name: medical_card_appointment_medical_card_id_536c5736; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX medical_card_appointment_medical_card_id_536c5736 ON public.medical_card_appointment USING btree (medical_card_id);


--
-- Name: medical_card_client_id_2e3efd0f; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX medical_card_client_id_2e3efd0f ON public.medical_card USING btree (client_id);


--
-- Name: user_user_email_1c6f3d1a_like; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX user_user_email_1c6f3d1a_like ON public.user_user USING btree (email varchar_pattern_ops);


--
-- Name: user_user_groups_group_id_c57f13c0; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX user_user_groups_group_id_c57f13c0 ON public.user_user_groups USING btree (group_id);


--
-- Name: user_user_groups_user_id_13f9a20d; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX user_user_groups_user_id_13f9a20d ON public.user_user_groups USING btree (user_id);


--
-- Name: user_user_user_permissions_permission_id_ce49d4de; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX user_user_user_permissions_permission_id_ce49d4de ON public.user_user_user_permissions USING btree (permission_id);


--
-- Name: user_user_user_permissions_user_id_31782f58; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX user_user_user_permissions_user_id_31782f58 ON public.user_user_user_permissions USING btree (user_id);


--
-- Name: user_user_username_e2bdfe0c_like; Type: INDEX; Schema: public; Owner: medical_user
--

CREATE INDEX user_user_username_e2bdfe0c_like ON public.user_user USING btree (username varchar_pattern_ops);


--
-- Name: appointment appointment_client_id_b74d6c15_fk_client_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.appointment
    ADD CONSTRAINT appointment_client_id_b74d6c15_fk_client_id FOREIGN KEY (client_id) REFERENCES public.client(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: appointment appointment_doctor_id_9ae603db_fk_doctor_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.appointment
    ADD CONSTRAINT appointment_doctor_id_9ae603db_fk_doctor_id FOREIGN KEY (doctor_id) REFERENCES public.doctor(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: client client_user_id_af1c5063_fk_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.client
    ADD CONSTRAINT client_user_id_af1c5063_fk_user_user_id FOREIGN KEY (user_id) REFERENCES public.user_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_user_user_id FOREIGN KEY (user_id) REFERENCES public.user_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: doctor doctor_user_id_382cea53_fk_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.doctor
    ADD CONSTRAINT doctor_user_id_382cea53_fk_user_user_id FOREIGN KEY (user_id) REFERENCES public.user_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: medical_card_appointment medical_card_appoint_appointment_id_8ab3e76d_fk_appointme; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.medical_card_appointment
    ADD CONSTRAINT medical_card_appoint_appointment_id_8ab3e76d_fk_appointme FOREIGN KEY (appointment_id) REFERENCES public.appointment(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: medical_card_appointment medical_card_appoint_medical_card_id_536c5736_fk_medical_c; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.medical_card_appointment
    ADD CONSTRAINT medical_card_appoint_medical_card_id_536c5736_fk_medical_c FOREIGN KEY (medical_card_id) REFERENCES public.medical_card(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: medical_card medical_card_client_id_2e3efd0f_fk_client_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.medical_card
    ADD CONSTRAINT medical_card_client_id_2e3efd0f_fk_client_id FOREIGN KEY (client_id) REFERENCES public.client(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: receptionist receptionist_user_id_d3323f38_fk_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.receptionist
    ADD CONSTRAINT receptionist_user_id_d3323f38_fk_user_user_id FOREIGN KEY (user_id) REFERENCES public.user_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_user_groups user_user_groups_group_id_c57f13c0_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_groups
    ADD CONSTRAINT user_user_groups_group_id_c57f13c0_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_user_groups user_user_groups_user_id_13f9a20d_fk_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_groups
    ADD CONSTRAINT user_user_groups_user_id_13f9a20d_fk_user_user_id FOREIGN KEY (user_id) REFERENCES public.user_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_user_user_permissions user_user_user_permi_permission_id_ce49d4de_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_user_permissions
    ADD CONSTRAINT user_user_user_permi_permission_id_ce49d4de_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_user_user_permissions user_user_user_permissions_user_id_31782f58_fk_user_user_id; Type: FK CONSTRAINT; Schema: public; Owner: medical_user
--

ALTER TABLE ONLY public.user_user_user_permissions
    ADD CONSTRAINT user_user_user_permissions_user_id_31782f58_fk_user_user_id FOREIGN KEY (user_id) REFERENCES public.user_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--


